{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "solana-wallet-authencation",
  "type": "registry:component",
  "title": "Solana Wallet Authencation",
  "description": "A component for Solana wallet authencation.",
  "dependencies": [
    "@solana/wallet-adapter-react",
    "@solana/wallet-adapter-base",
    "@solana/web3.js"
  ],
  "registryDependencies": [
    "toast",
    "button",
    "dropdown-menu",
    "alert-dialog"
  ],
  "files": [
    {
      "path": "registry/solana/components/app-wallet-provider.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useMemo } from \"react\";\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from \"@solana/wallet-adapter-react\";\r\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\r\nimport { clusterApiUrl } from \"@solana/web3.js\";\r\n\r\nexport default function AppWalletProvider({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const network = WalletAdapterNetwork.Devnet;\r\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\r\n  const wallets = useMemo(\r\n    () => [\r\n      // manually add any legacy wallet adapters here\r\n    ],\r\n    [network]\r\n  );\r\n\r\n  return (\r\n    <ConnectionProvider endpoint={endpoint}>\r\n      <WalletProvider wallets={wallets} autoConnect>\r\n        {children}\r\n      </WalletProvider>\r\n    </ConnectionProvider>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "registry/solana/components/wallet-button.tsx",
      "content": "\"use client\";\r\nimport { useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { useState } from \"react\"; // Add this import\r\nimport { WalletModal } from \"@/registry/solana/components/auth-wallet-modal\"; // Add this import\r\n\r\nexport function WalletButton() {\r\n  const { connected, publicKey, disconnect } = useWallet();\r\n  const { toast } = useToast();\r\n  const [showModal, setShowModal] = useState(false); // Add state for modal\r\n\r\n  const shortAddress =\r\n    publicKey?.toBase58().slice(0, 4) + \"...\" + publicKey?.toBase58().slice(-4);\r\n\r\n  const copyAddress = () => {\r\n    if (publicKey) {\r\n      navigator.clipboard.writeText(publicKey.toBase58());\r\n      toast({\r\n        description: \"Address copied to clipboard\",\r\n        duration: 2000,\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!connected) {\r\n    return (\r\n      <>\r\n        <Button\r\n          variant=\"default\"\r\n          onClick={() => setShowModal(true)} // Update to use local state\r\n          size={\"default\"}\r\n        >\r\n          <span className=\"sm:hidden block\">Connect</span>\r\n          <span className=\"hidden sm:block\">Connect Wallet</span>\r\n        </Button>\r\n        <WalletModal open={showModal} onClose={() => setShowModal(false)} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DropdownMenu>\r\n        <DropdownMenuTrigger asChild>\r\n          <Button variant=\"outline\">{shortAddress}</Button>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent align=\"end\">\r\n          <DropdownMenuItem onClick={copyAddress}>\r\n            Copy address\r\n          </DropdownMenuItem>\r\n          <DropdownMenuItem onClick={disconnect}>Disconnect</DropdownMenuItem>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n      <WalletModal open={showModal} onClose={() => setShowModal(false)} />\r\n    </>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "registry/solana/components/auth-wallet-modal.tsx",
      "content": "\"use client\";\r\nimport { useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { WalletReadyState } from \"@solana/wallet-adapter-base\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogOverlay,\r\n} from \"@/components/ui/alert-dialog\";\r\nimport { X } from \"lucide-react\"; // Add this import for the close icon\r\nimport { useMemo, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\ninterface WalletModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport function WalletModal({ open, onClose }: WalletModalProps) {\r\n  const { wallets, select, connected } = useWallet();\r\n\r\n  useEffect(() => {\r\n    const mainContent = document.querySelector(\"main\");\r\n    if (!connected && mainContent && open) {\r\n      mainContent.classList.add(\"blur-sm\");\r\n    } else if (mainContent) {\r\n      mainContent.classList.remove(\"blur-sm\");\r\n    }\r\n\r\n    // Close modal when connected\r\n    if (connected) {\r\n      onClose();\r\n    }\r\n  }, [connected, onClose]);\r\n\r\n  const [installedWallets] = useMemo(() => {\r\n    const installed = wallets.filter(\r\n      (wallet) => wallet.readyState === WalletReadyState.Installed\r\n    );\r\n    const notInstalled = wallets.filter(\r\n      (wallet) => wallet.readyState !== WalletReadyState.Installed\r\n    );\r\n    return [installed, notInstalled];\r\n  }, [wallets]);\r\n\r\n  return (\r\n    <AlertDialog open={open}>\r\n      <AlertDialogContent className=\"max-w-md\">\r\n        <div className=\"flex justify-between items-start\">\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>\r\n              {installedWallets.length > 0\r\n                ? \"Connect a wallet on Solana to continue\"\r\n                : \"Install a Solana wallet to continue\"}\r\n            </AlertDialogTitle>\r\n          </AlertDialogHeader>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            className=\"h-8 w-8 absolute right-4 top-4\"\r\n            onClick={onClose}\r\n          >\r\n            <X className=\"h-4 w-4\" />\r\n            <span className=\"sr-only\">Close</span>\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"grid gap-4\">\r\n          {installedWallets.length > 0 ? (\r\n            // Show installed wallets\r\n            installedWallets.map((wallet) => (\r\n              <button\r\n                key={wallet.adapter.name}\r\n                onClick={() => select(wallet.adapter.name)}\r\n                className=\"flex items-center space-x-3 p-3 rounded-lg hover:bg-accent\"\r\n              >\r\n                {wallet.adapter.icon && (\r\n                  <Image\r\n                    src={wallet.adapter.icon}\r\n                    alt={wallet.adapter.name}\r\n                    className=\"w-8 h-8\"\r\n                    height={32}\r\n                    width={32}\r\n                  />\r\n                )}\r\n                <span>{wallet.adapter.name}</span>\r\n              </button>\r\n            ))\r\n          ) : (\r\n            // Show download options\r\n            <div className=\"space-y-4\">\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                You need to install a Solana wallet to continue. Here are some\r\n                popular options:\r\n              </p>\r\n              <div className=\"grid gap-3\">\r\n                <a\r\n                  href=\"https://phantom.app/download\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex items-center space-x-3 p-3 rounded-lg hover:bg-accent border\"\r\n                >\r\n                  <Image\r\n                    src=\"/phantom.svg\"\r\n                    alt=\"Phantom\"\r\n                    className=\"w-8 h-8\"\r\n                    height={32}\r\n                    width={32}\r\n                  />\r\n                  <div>\r\n                    <p className=\"font-medium\">Phantom Wallet</p>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      Popular Solana wallet\r\n                    </p>\r\n                  </div>\r\n                </a>\r\n                <a\r\n                  href=\"https://solflare.com/download\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"flex items-center space-x-3 p-3 rounded-lg hover:bg-accent border\"\r\n                >\r\n                  <Image\r\n                    src=\"/solflare.svg\"\r\n                    alt=\"Solflare\"\r\n                    className=\"w-8 h-8\"\r\n                    height={32}\r\n                    width={32}\r\n                  />\r\n                  <div>\r\n                    <p className=\"font-medium\">Solflare Wallet</p>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      Secure Solana wallet\r\n                    </p>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={() => (window.location.href = \"/\")}\r\n          className=\"mb-4\"\r\n        >\r\n          Return to Home\r\n        </Button>\r\n      </AlertDialogContent>\r\n      <AlertDialogOverlay className=\"bg-background/80 backdrop-blur-sm\" />\r\n    </AlertDialog>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "registry/solana/public/phantom.svg",
      "content": "<svg width=\"593\" height=\"493\" viewBox=\"0 0 593 493\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M70.0546 493C145.604 493 202.38 427.297 236.263 375.378C232.142 386.865 229.852 398.351 229.852 409.378C229.852 439.703 247.252 461.297 281.592 461.297C328.753 461.297 379.119 419.946 405.218 375.378C403.386 381.811 402.471 387.784 402.471 393.297C402.471 414.432 414.375 427.757 438.643 427.757C515.108 427.757 592.03 292.216 592.03 173.676C592.03 81.3243 545.327 0 428.112 0C222.069 0 0 251.784 0 414.432C0 478.297 34.3405 493 70.0546 493ZM357.141 163.568C357.141 140.595 369.962 124.514 388.734 124.514C407.049 124.514 419.87 140.595 419.87 163.568C419.87 186.541 407.049 203.081 388.734 203.081C369.962 203.081 357.141 186.541 357.141 163.568ZM455.126 163.568C455.126 140.595 467.947 124.514 486.719 124.514C505.034 124.514 517.855 140.595 517.855 163.568C517.855 186.541 505.034 203.081 486.719 203.081C467.947 203.081 455.126 186.541 455.126 163.568Z\" fill=\"#AB9FF2\"/>\n</svg>\n",
      "type": "registry:file",
      "target": "public/phantom.svg"
    },
    {
      "path": "registry/solana/public/solflare.svg",
      "content": "<svg width=\"248\" height=\"248\" viewBox=\"0 0 248 248\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g clip-path=\"url(#clip0_3159_613)\">\n    <path d=\"M125.43 210.536C127.404 210.536 129.004 212.119 129.004 214.072C129.004 216.024 127.404 217.607 125.43 217.607C123.456 217.607 121.855 216.024 121.855 214.072C121.855 212.119 123.456 210.536 125.43 210.536ZM121.547 41.6533C123.293 41.7976 124.704 43.1212 124.94 44.8373L129.192 75.7285C130.62 85.9345 142.929 90.3565 150.527 83.4211L193.125 44.6496C194.152 43.7143 195.753 43.7791 196.699 44.7943C197.568 45.7258 197.594 47.1518 196.76 48.1136L159.614 90.9618C152.776 98.836 157.822 111.132 168.246 112.01L201.021 115.169C202.653 115.326 203.848 116.761 203.688 118.374C203.557 119.704 202.532 120.778 201.196 120.987L166.757 126.364C156.758 127.727 152.229 139.568 158.733 147.261L170.841 161.534C171.816 162.684 171.663 164.398 170.499 165.361C169.513 166.178 168.086 166.21 167.063 165.437L152.138 154.166C144.084 148.109 132.474 153.257 131.623 163.281L128.334 202.376C128.198 203.991 126.763 205.191 125.129 205.057C123.742 204.943 122.621 203.892 122.433 202.53L117.217 164.766C115.819 154.56 103.51 150.138 95.8819 157.073L50.5665 198.335C49.6285 199.189 48.1673 199.13 47.3028 198.204C46.5097 197.353 46.4856 196.051 47.2467 195.173L86.7949 149.532C93.6332 141.658 88.6185 129.362 78.1935 128.485L45.4113 125.324C43.779 125.167 42.5848 123.732 42.7441 122.119C42.8754 120.789 43.8999 119.715 45.2359 119.506L79.6525 114.13C89.6518 112.767 94.2106 100.926 87.7067 93.2332L79.465 83.5171C78.2555 82.0912 78.4449 79.9666 79.8881 78.7715C81.1114 77.7586 82.8822 77.7197 84.1499 78.6779L94.2711 86.3283C102.325 92.3852 113.935 87.2371 114.786 77.2129L117.509 45.0274C117.681 42.994 119.488 41.4834 121.547 41.6533ZM34.3621 118.507C36.3363 118.507 37.9366 120.089 37.9366 122.042C37.9366 123.994 36.3363 125.577 34.3621 125.577C32.388 125.577 30.7876 123.994 30.7876 122.042C30.7876 120.089 32.388 118.507 34.3621 118.507ZM213.638 114.917C215.612 114.917 217.212 116.5 217.212 118.452C217.212 120.405 215.612 121.988 213.638 121.988C211.664 121.988 210.063 120.405 210.063 118.452C210.063 116.5 211.664 114.917 213.638 114.917ZM121.03 30.3931C123.005 30.3931 124.605 31.9759 124.605 33.9285C124.605 35.881 123.005 37.4639 121.03 37.4639C119.056 37.4639 117.456 35.881 117.456 33.9285C117.456 31.9759 119.056 30.3931 121.03 30.3931Z\" fill=\"url(#paint0_linear_3159_613)\"/>\n    <path d=\"M123.175 153.643C141.824 153.643 156.941 138.691 156.941 120.247C156.941 101.803 141.824 86.8508 123.175 86.8508C104.527 86.8508 89.41 101.803 89.41 120.247C89.41 138.691 104.527 153.643 123.175 153.643Z\" fill=\"url(#paint1_radial_3159_613)\"/>\n  </g>\n  <defs>\n    <linearGradient id=\"paint0_linear_3159_613\" x1=\"55.1462\" y1=\"60.1723\" x2=\"162.052\" y2=\"156.952\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#FFC10B\"/>\n      <stop offset=\"1\" stop-color=\"#FB3F2E\"/>\n    </linearGradient>\n    <radialGradient id=\"paint1_radial_3159_613\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"translate(115.464 107.918) rotate(67.5196) scale(49.0906 49.5676)\">\n      <stop stop-color=\"#FFC10B\"/>\n      <stop offset=\"1\" stop-color=\"#FB3F2E\"/>\n    </radialGradient>\n    <clipPath id=\"clip0_3159_613\">\n      <rect width=\"188\" height=\"188\" fill=\"white\" transform=\"translate(30 30)\"/>\n    </clipPath>\n  </defs>\n</svg>\n",
      "type": "registry:file",
      "target": "public/solflare.svg"
    }
  ]
}